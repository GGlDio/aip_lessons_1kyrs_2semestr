#include <iostream>

const int n=3;
const int cols=3;
const int rows=3;

void printMatrix(const int arr[][n]){
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            std::cout<<arr[i][j]<<" ";
        }
    std::cout<<std::endl;
    }
}

void addMatrix(int A[][n], int B[][n]){
    int C[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                C[i][j] = A[i][j] + B[i][j];
            }
        }
    std::cout<<"Result of matrix addition:"<<std::endl;
    printMatrix(C);
}

void subMatrix(int A[][n], int B[][n]){
    int C[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                C[i][j] = A[i][j] - B[i][j];
            }
        }
    std::cout<<"Result of subtracting matrices:"<<std::endl;
    printMatrix(C);
}

void mulMatrix(int A[][n], int B[][n]){
    int C[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                C[i][j] = 0;
                for(int k=0;k<n;k++){
                    C[i][j] += A[i][k] * B[k][j];
                }
            }
        }
    std::cout<<"Result of matrix multiplication:"<<std::endl;
    printMatrix(C);
}


void transposeMatrix(int arr[][n]){
    int B[n][n];
    for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
    B[j][i] = arr[i][j];
    }
    }
    std::cout<<"The result of the transposed matrix:"<<std::endl;
    printMatrix(B);
}

int main(){
    int A[rows][cols] = {{1,2,3},{4,5,6},{7,8,9}};
    int B[rows][cols] = {{10,11,12},{13,14,15},{16,17,18}};
    std::cout<<"Matrix A:"<<std::endl;
    printMatrix(A);
    std::cout<<"Matrix B:"<<std::endl;
    printMatrix(B);
    addMatrix(A,B);
    subMatrix(A,B);
    mulMatrix(A,B);
    transposeMatrix(B);
    return 0;
}
